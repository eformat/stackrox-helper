---
apiVersion: batch/v1
kind: Job
metadata:
  name: configure-stackrox
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      containers:
        - image: quay.io/rht-labs/stack-do500:3.0.8
          command:
            - /bin/bash
            - -c
            - |
              set -x
              # wait for operator
              while [ true ]; do oc get crd centrals.platform.stackrox.io; if [ $? -eq 0 ]; then break; fi ; sleep 5s; done

              # generate an api token
              ROX_ENDPOINT=central.stackrox
              ROX_ADMIN_PASSWD=$(oc -n stackrox get secret central-htpasswd -o go-template='{{ printf "{{index .data \"password\" | base64decode}}" }}')
              ROX_API_TOKEN=$(curl -sk -u "admin:${ROX_ADMIN_PASSWD}" "https://$ROX_ENDPOINT/v1/apitokens/generate" -d '{"name": "do500 test", "role": "Admin"}' | jq -r '.token')
              if [ -z ${ROX_API_TOKEN} ]; then
                echo "ðŸ›‘ could not generate ROX_API_TOKEN, exiting ðŸ›‘";
                exit 1;
              fi

              # generate init bundle
              roxctl -e "${ROX_ENDPOINT}:443" central init-bundles generate do500 --output-secrets /tmp/cluster_init_bundle.yaml --insecure-skip-tls-verify
              if [ ! -f /tmp/cluster_init_bundle.yaml ]; then
                echo "ðŸ›‘ could not generate init bundle, exiting ðŸ›‘";
                exit 1;
              fi
              oc -n stackrox apply -f /tmp/cluster_init_bundle.yaml

              # create secured cluster
              cat <<EOF | oc apply -f-
              apiVersion: platform.stackrox.io/v1alpha1
              kind: SecuredCluster
              metadata:
                name: do500-secured-cluster
                namespace: stackrox
              spec:
                admissionControl:
                  listenOnCreates: false
                  listenOnEvents: true
                  listenOnUpdates: false
                auditLogs:
                  collection: Auto
                centralEndpoint: 'central.stackrox:443'
                clusterName: d0500
                perNode:
                  collector:
                    collection: KernelModule
                    imageFlavor: Regular
                  taintToleration: TolerateTaints
              EOF
              exit 0;
          imagePullPolicy: Always
          name: configure-stackrox
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: configure-stackrox
      serviceAccountName: configure-stackrox
      terminationGracePeriodSeconds: 10
